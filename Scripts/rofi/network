#!/bin/bash

# Get info
IFACE="$(nmcli connection show --active | awk '!/docker|vpn| lo/ && (NR>1) {print $NF}')"
# IFACE="${IFACE##*: }"
STATUS="$(nmcli radio wifi)"
active=""
urgent=""

if (ping -4 -c 1 google.com || ping -4 -c 1 github.com || ping -4 -c 1 sourceforge.net) &>/dev/null; then
  if [[ $STATUS == *"enable"* ]]; then
    if [[ $IFACE == e* ]]; then
      connected=" Connected To Internet (Wired)"
      SSID="Ethernet"
    else
      connected=" Connected To Internet (Wireless)"
      SSID="$(nmcli device show "$IFACE" | grep 'GENERAL.CONNECTION')"
      SSID="${SSID##* }"
    fi
    active="-a 0"
    PIP="$(wget --timeout=30 http://ipinfo.io/ip -qO -)"
    LIP="$(nmcli device show "$IFACE" | grep 'IP4.ADDRESS')"
    LIP="${LIP##* }"
  fi
else
  urgent="-u 0"
  SSID="Disconnected"
  PIP="NA"
  LIP="NA"
  connected=" / Offline"
fi

# Icons
bmon=" Open Bandwidth Monitor"
launch_cli=" Open Network Manager"
launch=" Open Connection Editor"

options="$connected\n$bmon\n$launch_cli\n$launch"

gui() {
  chosen="$(
    echo -e "$options" | rofi \
      -theme "$HOME/.config/rofi/themes/without-inputbar.rasi" \
      -theme-str 'listview { lines: 4; }' \
      -markup \
      -dmenu \
      -mesg "SSID: <b>$SSID</b> 
Local IP:  <b>$LIP</b>
Public IP: <b>$PIP</b>" \
      "$active" "$urgent" \
      -selected-row 1
  )"

  case $chosen in
    "$connected")
      if [[ $STATUS == *"enable"* ]]; then
        nmcli radio wifi off
      else
        nmcli radio wifi on
      fi
      ;;
    "$bmon")
      $TERMINAL -e bmon
      ;;
    "$launch_cli")
      $TERMINAL -e nmtui
      ;;
    "$launch")
      nm-connection-editor
      ;;
  esac
}

tty() {
  local bold=$'\e[1m'
  local reset=$'\e[0m'

  echo "SSID: $bold$SSID$reset
Local IP:  $bold$LIP$reset
Public IP: $bold$PIP$reset"
}

if [[ -t 0 ]]; then
  tty
else
  gui
fi
