#!/bin/sh

help_message="\
usage: set-background [options]
  options:
    -h, --help                   Shows this help message
    -r, --restore                Restores the last set background
    -p, --pacwall                Generates and sets the background with pacwall
    -i, --image [image_path]     Sets the background as the given image
"
bg_color="#1A1B26"

restore_script_dir="$XDG_DATA_HOME/feh"
restore_script_path="$restore_script_dir/restore-bg"

[ -d "$restore_script_dir" ] || mkdir -p "$restore_script_dir"

with_pacwall() {
  # Generate an image with the solid background
  convert -size 1920x1080 xc:$bg_color /tmp/temp-bg.png

  # Generate the pacwall image
  pacwall -k

  # Resize the image generated by pacwall
  convert "$HOME/.cache/pacwall/pacwall.png" -resize 980 "$HOME/.cache/pacwall/pacwall.png"

  # Merge both the images
  convert "/tmp/temp-bg.png" "$HOME/.cache/pacwall/pacwall.png" -gravity center -compose over -composite "$HOME/.cache/pacwall/pacwall.png"

  from_image "$HOME/.cache/pacwall/pacwall.png"
}

from_image() {
  feh --bg-scale "$1"
  mv ~/.fehbg "$restore_script_path"
}

restore() {
  if [ -f "$restore_script_path" ]; then
    "$restore_script_path"
  else
    echo "Please set a background first before trying to restore!"
  fi
}

while test $# -gt 0; do
  case "$1" in
    -h | --help)
      echo "$help_message"
      exit 0
      ;;
    -r | --restore)
      restore
      exit 0
      ;;
    -p | --pacwall)
      with_pacwall
      exit 0
      ;;
    -i | --image)
      shift
      if test $# -gt 0; then
        from_image "$1"
        exit 0
      else
        echo "No image specified"
        exit 1
      fi
      shift
      ;;
    *)
      echo "$help_message"
      exit 1
      ;;
  esac
done

echo "$help_message" && exit 1
