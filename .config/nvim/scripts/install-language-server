#!/bin/sh

help_message="\
usage: install-lang-server [options]
  options:
    -h, --help                   Shows this help message
    -n, --name [name-of-lang]    Specify the name of the language whose server you want to install
    -a, --all                    Install all the language servers
"

DATA_PATH="$HOME/.local/share/nvim"
LANG_SERVERS_DIR="$DATA_PATH/language-servers"

[ -d "$LANG_SERVERS_DIR" ] || mkdir -p "$LANG_SERVERS_DIR"

cd "$LANG_SERVERS_DIR" || exit 1

install_server_using_node() {
	echo "Installing $1 language server in $LANG_SERVERS_DIR/$1..."
	mkdir -p "$1" && cd "$1" || exit 1
	npm init -y
	npm i $2
	cd ..
	echo "Installed $1 language server in $LANG_SERVERS_DIR/$1!"
}

install_server_using_go() {
	echo "Installing $1 language server in $LANG_SERVERS_DIR/$1..."
	mkdir -p "$1" && cd "$1" || exit 1
	GOPATH=$(pwd) GOBIN=$(pwd) GO111MODULE=on go get -v "$2"
	GOPATH=$(pwd) GO111MODULE=on go clean -modcache
	cd ..
	echo "Installed $1 language server in $LANG_SERVERS_DIR/$1!"
}

install_language_server() {
	if [ -z "$1" ]; then
		echo "Please specify a language!" && exit 1
	fi

	case "$1" in
		ts | typescript | js | javascript)
			install_server_using_node "typescript-ls" "typescript typescript-language-server"
			;;
		sh | bash)
			install_server_using_node "bash-ls" "bash-language-server"
			;;
		docker)
			install_server_using_node "docker-ls" "dockerfile-language-server-nodejs"
			;;
		gql | graphql)
			install_server_using_node "graphql-ls" "graphql-language-service-cli"
			;;
		json)
			install_server_using_node "json-ls" "vscode-json-languageserver"
			;;
		prettier)
			install_server_using_node "prettier-ls" "prettier"
			;;
		py | python)
			install_server_using_node "python-ls" "pyright"
			;;
		yml | yaml)
			install_server_using_node "yaml-ls" "yaml-language-server"
			;;
		vim)
			install_server_using_node "vim-ls" "vim-language-server"
			;;
		html)
			install_server_using_node "html-ls" "vscode-html-languageserver-bin"
			;;
		css)
			install_server_using_node "css-ls" "vscode-css-languageserver-bin"
			;;
		efm)
			install_server_using_go "efm-ls" "github.com/mattn/efm-langserver@latest"
			;;
		go | golang)
			install_server_using_go "go-ls" "golang.org/x/tools/gopls@latest"
			;;
	esac
}

while test $# -gt 0; do
	case "$1" in
		-h | --help)
			echo "$help_message"
			exit 0
			;;
		-n | --name)
			shift
			if test $# -gt 0; then
				install_language_server "$1"
				exit 0
			else
				echo "No name specified"
				exit 1
			fi
			shift
			;;
		-a | --all)
			echo "Intalling all language servers..."
			install_language_server "typescript"
			install_language_server "css"
			install_language_server "html"
			install_language_server "vim"
			install_language_server "yaml"
			install_language_server "pythom"
			install_language_server "prettier"
			install_language_server "json"
			install_language_server "graphql"
			install_language_server "docker"
			install_language_server "bash"
			install_language_server "efm"
			install_language_server "go"
			exit 0
			;;
		*)
			echo "$help_message"
			exit 1
			;;
	esac
done

echo "$help_message" && exit 1
